#!/usr/bin/env perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Sat Oct  7 02:03:41 PDT 2023
# Last Modified: Sat Oct  7 02:03:46 PDT 2023
# Filename:      jrp-scores/bin/getNoteCount
# Syntax:        perl 5
#
# Description:   Extract notecounts for files according to the input
#                file which contains a single ID for each file on
#                each line, such as:
#		Ano1001a
#		Ano1001b
#		Ano1001c
#		Ano1001d
#		Ano1001e
#		Ano1002
#		Ano1025a
#		Ano1025b
#		Ano1025c
#		Ano1025d
#
#                This is copyied from the spreadsheet
#                https://bit.ly/jrp-metadata, column A.  Then the
#                output of this program is pasted into the "Notes"
#                column of the same spreadsheet.


use strict;

die "Copy column A (excluding first row) from spreadsheet https://bit.ly/jrp-metadata\nand store in a file called ids.txt before running this program.\n" if !-r "ids.txt";

my $notecount = `which notecount`;
chomp $notecount;
die "Install Humdrum Extras for notecount command\n" if $notecount =~ /^s\*$/;

my @list = <>;
chomp @list;

if (@list < 100) {
	die "Usage: $0 ID-list.txt | pbcopy\n";
}

foreach my $entry (@list) {
	if ($entry !~ /^([A-Z][a-z][a-z])\d{4}/) {
		print "\n";
		next;
	}
	my $composer = $1;
		
	my @files = glob("$composer/kern/$entry-*\.krn");

	if (@files == 0) {
		print "\n";
		next;
	}
	if (@files > 1) {
		die "Error: duplicate IDs in files: ", join("\t", @files), "\n";
	}
	my $command = "$notecount -s $files[0] | cut -f 1";
	my $result = `$command`;
	chomp $result;
	if ($result =~ /^\d+$/) {
		print "$result\n";
	} else {
		print "$entry-ERROR\n";
	}
}

	

