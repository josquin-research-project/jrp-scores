#!/usr/bin/env perl
#
# Programmer:    Craig Stuart Sapp <craig.stanford.edu>
# Creation Date: Sun Oct 29 10:36:59 PDT 2023
# Last Modified: Sun Oct 29 10:37:03 PDT 2023
# Filename:      jrp-scores/bin/getExtantVoices
# Syntax:        perl 5
#
# Description:   Count the number of **kern spines in file.
#                Input is a list of work IDs:
#
#		Ano1001a
#		Ano1001b
#		Ano1001c
#		Ano1001d
#		Ano1001e
#		Ano1002
#		Ano1025a
#		Ano1025b
#		Ano1025c
#		Ano1025d
#                 This is copyied from the spreadsheet
#                 https://bit.ly/jrp-metadata, column A.
#

use strict;
use Getopt::Long;

my $prefixIds = 0;
Getopt::Long::Configure("bundling");
GetOptions (
   'p|prefix-ids' => \$prefixIds
);

my @list = <>;
chomp @list;

if (@list < 100) {
	die "Usage: getWorkIdList | $0 [-p] | pbcopy\n";
}

foreach my $entry (@list) {
	if ($entry !~ /^([A-Z][a-z][a-z])\d{4}/) {
		print "$entry\t" if $prefixIds;
		print "\n";
		next;
	}
	my $composer = $1;
		
	my $pattern = "$composer/kern/$entry-*\.krn";
	my @files = glob($pattern);

	if (@files == 0) {
		print "$entry\tNO_FILE" if $prefixIds;
		print "\n";
		next;
	}
	if (@files > 1) {
		die "Error: duplicate IDs in files: ", join("\t", @files), "\n";
	}
	my $vcount = 0;

	my @contents;
	open(FILE, $files[0]) or $vcount = "NO_FILE";
	@contents = <FILE>;
	close FILE;

	foreach my $line (@contents) {
		next if $line !~ /^\*\*/;
		chomp $line;
		my @data = split(/\t+/, $line);
		for (my $i=0; $i<@data; $i++) {
			if ($data[$i] eq "**kern") {
				$vcount++;
			}
		}
		last;
	}

	print "$entry\t" if $prefixIds;
	print "$vcount\n";
}



